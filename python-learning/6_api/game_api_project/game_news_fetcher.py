# Data obtained from the RAWG API (https://rawg.io/apidocs)

import requests
import os
import json
from dotenv import load_dotenv

try:
    import requests
except ImportError:
    print("–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ 'requests' –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ: pip install requests")
    input("exit")
    exit()

load_dotenv() # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–º—ñ–Ω–Ω—ñ –∑ .env —Ñ–∞–π–ª—É
API_KEY = os.getenv("RAWG_API_KEY")  # –ö–ª—é—á —É —Ñ–∞–π–ª—ñ .env

while True:
    user_choice = input("[1. find the game / 2. read the .json file / 3. exit]\n:")

    if user_choice == '1':
        game_name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä–∏:").strip()
        if not game_name:
            print("‚ùó –ù–∞–∑–≤–∞ –≥—Ä–∏ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–æ—é!")
            continue

        # –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ API
        url = f"https://api.rawg.io/api/games?key={API_KEY}&search={game_name}"
        response = requests.get(url)

        if response.status_code == 200:
            data = response.json() # –û—Ç—Ä–∏–º—É—î–º–æ JSON

            if data['count'] > 0: #–Ø–∫—â–æ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
                game = data['results'][0] # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à—É –≥—Ä—É

                game_info = {
                    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ (–º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ, —Ç–æ–º—É –æ–±–µ—Ä–µ–∂–Ω–æ)
                    "name" : game.get("name", "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"),
                    "rating" : game.get("rating", "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"),
                    "released" : game.get("released", "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"),
                    # –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ (–ø–µ—Ä—à–∏–π —É —Å–ø–∏—Å–∫—É)
                    "developers" : developers[0]['name'] if (developers := game.get("developers", [])) else "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö",
                    # –ü–ª–∞—Ç—Ñ–æ—Ä–º–∏ (—Å–ø–∏—Å–æ–∫)
                    "platforms" : [p['platform']['name'] for p in platforms ] if (
                    platforms := game.get("platforms", [])) else ["–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"]
                }

                #–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∫—Ä–∞—Å–∏–≤—ñ—à–µ —ñ –∑—Ä–æ–∑—É–º—ñ–ª—ñ—à–µ
                def print_game_info(info):
                    print(f"\nüìú –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä—É: {game_info['name']}")
                    print(f"‚≠ê –†–µ–π—Ç–∏–Ω–≥: {game_info['rating']}")
                    print(f"üìÖ –î–∞—Ç–∞ –≤–∏—Ö–æ–¥—É: {game_info['released']}")
                    print(f"üë®‚Äçüíª –†–æ–∑—Ä–æ–±–Ω–∏–∫: {game_info['developers']}")
                    print(f"üéÆ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∏: .join{game_info['platforms']}") # .join –¥–ª—è –±—ñ–ª—å—à —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ

                print_game_info(game_info)

            else:
                print("üîç –ì—Ä—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –°–ø—Ä–æ–±—É–π—Ç–µ —ñ–Ω—à—É –Ω–∞–∑–≤—É.")

        elif response.status_code == 404:
            print("üåê –ü–æ–º–∏–ª–∫–∞: API –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ (404)")
        else:
            print(f"üåê –ü–æ–º–∏–ª–∫–∞ API: {response.status_code}")

        # –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–≥—Ä–∏
        user_save = input("[1. load data / 2. repeat / 3. exit]\n:")

        if user_save == '1':
            user_file_name = input("name the file\n:")

            with open(f"../../5_file-assets/3_file_json/for_gameNews/{user_file_name}.json", 'w', encoding='utf-8') as file :
                # ensure_ascii=False –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∏—Ä–∏–ª–∏—Ü—ñ
                json.dump(game_info, file, ensure_ascii=False, indent=4)
                print("the data has been saved")

        elif user_save == '2':
            print()

        elif user_choice == '3':
            exit()

        else:
            print("Error")

    elif user_choice == '2':
        user_file_name_r = input("Write the name of the file: ")  # –ù–∞–∑–≤–∞ –±–µ–∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
        try:
            with open(f"../../5_file-assets/3_file_json/for_gameNews/{user_file_name_r}.json", 'r', encoding='utf-8') as file_r:
                file_content = file_r.read()  # –ß–∏—Ç–∞—î–º–æ –≤–µ—Å—å –≤–º—ñ—Å—Ç
                print(file_content)  # –í–∏–≤–æ–¥–∏–º–æ –≤–º—ñ—Å—Ç
        except FileNotFoundError:
            print("üò± –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ü–µ—Ä–µ–≤—ñ—Ä –Ω–∞–∑–≤—É –∞–±–æ —à–ª—è—Ö.")
        except Exception as e:
            print(f"üö® –ü–æ–º–∏–ª–∫–∞: {e}")

    elif user_choice == '3':
        exit()

    else:
        print("Error")