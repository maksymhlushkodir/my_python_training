# Data obtained from the RAWG API (https://rawg.io/apidocs)

import requests
import os
import json
from dotenv import load_dotenv

try:
    import requests
except ImportError:
    print("–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ 'requests' –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ: pip install requests")
    exit()

load_dotenv() # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∑–º—ñ–Ω–Ω—ñ –∑ .env —Ñ–∞–π–ª—É
API_KEY = os.getenv("RAWG_API_KEY")  # –ö–ª—é—á —É —Ñ–∞–π–ª—ñ .env
game_name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä–∏:").strip()

# –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –¥–æ API
url = f"https://api.rawg.io/api/games?key={API_KEY}&search={game_name}"
response = requests.get(url)

if response.status_code == 200:
    data = response.json() # –û—Ç—Ä–∏–º—É—î–º–æ JSON

    if data['count'] > 0: #–Ø–∫—â–æ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        game = data['results'][0] # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à—É –≥—Ä—É

        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ (–º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ, —Ç–æ–º—É –æ–±–µ—Ä–µ–∂–Ω–æ)
        rating = game.get("rating", "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö")
        released = game.get("released", "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö")

        # –†–æ–∑—Ä–æ–±–Ω–∏–∫–∏ (–ø–µ—Ä—à–∏–π —É —Å–ø–∏—Å–∫—É)
        developers = game.get("developers", [])
        developer = developers[0]['name'] if developers else "–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"

        # –ü–ª–∞—Ç—Ñ–æ—Ä–º–∏ (—Å–ø–∏—Å–æ–∫)
        platforms = game.get("platforms", [])
        platform_names = [p['platform']['name'] for p in platforms] if platforms else ['–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö']

        # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
        print(f"\n–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≥—Ä—É '{game['name']}':")
        print(f"üîπ –†–µ–π—Ç–∏–Ω–≥: {rating}")
        print(f"üîπ –î–∞—Ç–∞ –≤–∏—Ö–æ–¥—É: {released}")
        print(f"üîπ –†–æ–∑—Ä–æ–±–Ω–∏–∫: {developer}")
        print("üîπ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∏:")
        for name in platform_names:
            print(f"   - {name}")

    else:
        print("Error: –ì—Ä—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ")
else:
    print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {response.status_code}")